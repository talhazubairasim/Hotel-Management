@model IEnumerable<Assignment.Models.Hotel>

<h2>Hotels</h2>
<p><a asp-action="Create" class="btn btn-success">Add Hotel</a></p>

<div class="card">
    <div class="card-header bg-dark text-white">
        <h5 class="mb-0"><i class="fa fa-building"></i> Hotels List</h5>
    </div>
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-striped table-hover mb-0" id="hotelsTable">
                <thead class="table-dark">
                    <tr>
                        <th class="sortable" data-column="name" data-sort="none">
                            <i class="fa fa-hotel"></i> Name
                            <i class="fa fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-column="address" data-sort="none">
                            <i class="fa fa-map-marker"></i> Address
                            <i class="fa fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-column="rating" data-sort="none">
                            <i class="fa fa-star"></i> Rating
                            <i class="fa fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-column="floors" data-sort="none">
                            <i class="fa fa-building-o"></i> Total Floors
                            <i class="fa fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-column="rooms" data-sort="none">
                            <i class="fa fa-door-open"></i> Total Rooms
                            <i class="fa fa-sort sort-icon"></i>
                        </th>
                        <th><i class="fa fa-cogs"></i> Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var h in Model)
                    {
                        <tr>
                            <td class="fw-semibold">@h.Name</td>
                            <td>@h.Address</td>
                            <td>
                                <span class="badge bg-warning text-dark">
                                    <i class="fa fa-star"></i> @h.Rating
                                </span>
                            </td>
                            <td>
                                <span class="badge bg-info">@h.TotalFloors</span>
                            </td>
                            <td>
                                <span class="badge bg-primary">@h.TotalRooms</span>
                            </td>
                            <td>
                                <a asp-action="Edit" asp-route-id="@h.HotelId" class="btn btn-sm btn-primary">
                                    <i class="fa fa-edit"></i> Edit
                                </a>
                                <button type="button"
                                        class="btn btn-sm btn-danger delete-btn"
                                        data-hotel-id="@h.HotelId"
                                        data-hotel-name="@h.Name">
                                    <i class="fa fa-trash"></i> Delete
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @Html.AntiForgeryToken()
        </div>
    </div>
    <div class="card-footer text-muted">
        <i class="fa fa-info-circle"></i>
        Click column headers to sort. Click again to reverse order.
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $('.sortable').each(function() {
                $(this).data('sort', 'none');
            });

            $('.sortable').click(function() {
                var column = $(this).data('column');
                var currentSort = $(this).data('sort');

                var newSort = currentSort === 'asc' ? 'desc' : 'asc';

                $(this).data('sort', newSort);

                $('.sortable').not(this).data('sort', 'none');

                $('.sort-icon').removeClass('fa-sort-up fa-sort-down').addClass('fa-sort');
                var sortIcon = $(this).find('.sort-icon');
                sortIcon.removeClass('fa-sort')
                       .addClass(newSort === 'asc' ? 'fa-sort-up' : 'fa-sort-down');

                sortTable(column, newSort);

                toastr.success(`Sorted by ${getColumnDisplayName(column)} (${newSort === 'asc' ? 'asc' : 'desc'})`);
            });

            $('.sortable').hover(
                function() {
                    $(this).addClass('bg-primary text-white').css('cursor', 'pointer');
                },
                function() {
                    $(this).removeClass('bg-primary text-white');
                }
            );
        });

        function sortTable(column, direction) {
            var table = $('#hotelsTable');
            var tbody = table.find('tbody');
            var rows = tbody.find('tr').toArray();

            rows.sort(function(a, b) {
                var aVal = getCellValue(a, column);
                var bVal = getCellValue(b, column);

                if (column === 'rating' || column === 'floors' || column === 'rooms') {
                    aVal = parseFloat(aVal) || 0;
                    bVal = parseFloat(bVal) || 0;
                } else {
                    aVal = aVal.toLowerCase();
                    bVal = bVal.toLowerCase();
                }

                if (aVal < bVal) return direction === 'asc' ? -1 : 1;
                if (aVal > bVal) return direction === 'asc' ? 1 : -1;
                return 0;
            });

            tbody.empty().append(rows);
        }

        function getCellValue(row, column) {
            var columnIndex = {
                'name': 0,
                'address': 1,
                'rating': 2,
                'floors': 3,
                'rooms': 4
            };

            return $(row).find('td').eq(columnIndex[column]).text().trim();
        }

        function getColumnDisplayName(column) {
            var names = {
                'name': 'Name',
                'address': 'Address',
                'rating': 'Rating',
                'floors': 'Floors',
                'rooms': 'Rooms'
            };
            return names[column] || column;
        }

                $(document).on('click', '.delete-btn', function () {
            var hotelId = $(this).data('hotel-id');
            var hotelName = $(this).data('hotel-name');

            if (confirm(`Are you sure you want to delete the hotel: ${hotelName}?`)) {
                $.ajax({
                    url: '@Url.Action("Delete", "Hotels")',
                    type: 'POST',
                    data: {
                        id: hotelId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message, "Deleted");
                            $(`#hotelsTable tr:has(td:contains("${hotelName}"))`).fadeOut(800, function () {
                                $(this).remove();
                            });
                        } else {
                            toastr.error(response.message, "Error");
                        }
                    },
                    error: function () {
                        toastr.error("An error occurred while deleting the hotel.", "Error");
                    }
                });
            }
        });

    </script>
}