@model IEnumerable<Assignment.Models.Reservation>
@{
    ViewData["Title"] = "View Reservations";
    var reservations = Model.ToList();
    var today = DateTime.Now;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2><i class="fa fa-list"></i> All Reservations</h2>
    <a asp-action="Index" class="btn btn-primary">
        <i class="fa fa-plus"></i> New Reservation
    </a>
</div>

<div class="row mb-3">
    <div class="col-md-4">
        <div class="card bg-primary text-white shadow-sm">
            <div class="card-body text-center">
                <i class="fas fa-calendar-check fa-2x mb-2"></i>
                <h4>@reservations.Count</h4>
                <p class="mb-0">Total Reservations</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-success text-white shadow-sm">
            <div class="card-body text-center">
                <i class="fas fa-play fa-2x mb-2"></i>
                <h4>
                    @reservations.Count(r => r.From <= today && r.To > today)
                </h4>
                <p class="mb-0">Active Reservations</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card bg-info text-white shadow-sm">
            <div class="card-body text-center">
                <i class="fas fa-dollar-sign fa-2x mb-2"></i>
                <h4>$@reservations.Sum(r => r.Cost).ToString("N0")</h4>
                <p class="mb-0">Total Revenue</p>
            </div>
        </div>
    </div>
</div>

@if (reservations.Any())
{
    <div class="card shadow-sm">
        <div class="card-header bg-dark text-white">
            <h5 class="mb-0"><i class="fa fa-table"></i> Reservation Details</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="reservationsTable">
                    <thead class="table-dark">
                        <tr>
                            <th><i class="fa fa-user"></i> Customer</th>
                            <th><i class="fa fa-building"></i> Hotel</th>
                            <th><i class="fa fa-door-open"></i> Room</th>
                            <th><i class="fa fa-sort-numeric-asc"></i> Floor</th>
                            <th><i class="fa fa-star"></i> Type</th>
                            <th><i class="fa fa-calendar"></i> From</th>
                            <th><i class="fa fa-calendar"></i> To</th>
                            <th><i class="fas fa-clock"></i> Duration</th>
                            <th><i class="fa fa-usd"></i> Cost</th>
                            <th><i class="fa fa-info-circle"></i> Status</th>
                            <th><i class="fa fa-cogs"></i> Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var reservation in reservations)
                        {
                            var isActive = reservation.From <= today && reservation.To > today;
                            var isPast = reservation.To <= today;
                            var isFuture = reservation.From > today;
                            var canCancel = isFuture || isActive;

                            <tr id="reservation-@reservation.ReservationId"
                                class="@(isActive ? "table-success" : isPast ? "table-secondary" : "") align-middle">
                                <td><strong>@reservation.Name</strong></td>
                                <td>@reservation.Room.Hotel.Name</td>
                                <td>@reservation.Room.Name</td>
                                <td><span class="badge bg-info">@reservation.Room.Floor</span></td>
                                <td>
                                    <span class="badge @(reservation.Room.Type == "Luxury" ? "bg-warning text-dark" :
                                                                                                     reservation.Room.Type == "Deluxe" ? "bg-success" : "bg-secondary")">
                                @reservation.Room.Type
                            </span>
                        </td>
                        <td>@reservation.From.ToString("MMM dd, yyyy HH:mm")</td>
                        <td>@reservation.To.ToString("MMM dd, yyyy HH:mm")</td>
                        <td>
                            <span class="badge bg-primary">
                                @reservation.DurationHours hour@(reservation.DurationHours != 1 ? "s" : "")
                            </span>
                        </td>
                        <td class="fw-bold text-success">$@reservation.Cost.ToString("N0")</td>
                        <td>
                            @if (isActive)
                                    {
                                        <span class="badge bg-success"><i class="fa fa-play"></i> Active</span>
                                    }
                                    else if (isPast)
                                    {
                                        <span class="badge bg-secondary"><i class="fa fa-check"></i> Completed</span>
                                    }
                                    else if (isFuture)
                                    {
                                        <span class="badge bg-primary"><i class="far fa-clock"></i> Upcoming</span>
                                    }
                                </td>
                                <td>
                                    @if (canCancel)
                                    {
                                        <button type="button"
                                                class="btn btn-danger btn-sm cancel-btn"
                                                data-reservation-id="@reservation.ReservationId"
                                                data-customer-name="@reservation.Name"
                                                data-hotel-name="@reservation.Room.Hotel.Name"
                                                data-room-name="@reservation.Room.Name"
                                                data-from-date="@reservation.From.ToString("MMM dd, yyyy HH:mm")"
                                                data-to-date="@reservation.To.ToString("MMM dd, yyyy HH:mm")"
                                                onclick="cancelReservation(this)">
                                            <i class="fa fa-times"></i> Cancel
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="text-muted"><i class="fa fa-lock"></i> Locked</span>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="card-footer text-muted">
            <i class="fa fa-info-circle"></i>
            Active/Upcoming reservations can be cancelled.
        </div>
    </div>
}
else
{
    <div class="card shadow-sm">
        <div class="card-body text-center py-5">
            <i class="fa fa-calendar-times-o fa-4x text-muted mb-3"></i>
            <h4>No Reservations Found</h4>
            <p class="text-muted">There are no reservations in the system yet.</p>
            <a asp-action="Index" class="btn btn-primary"><i class="fa fa-plus"></i> Make First Reservation</a>
        </div>
    </div>
}

@section Scripts {
    @Html.AntiForgeryToken()
    <script>
        function cancelReservation(button) {
            var $btn = $(button);
            var reservationId = $btn.data('reservation-id');
            var customerName = $btn.data('customer-name');
            var hotelName = $btn.data('hotel-name');
            var roomName = $btn.data('room-name');
            var fromDate = $btn.data('from-date');
            var toDate = $btn.data('to-date');

            var confirmMessage = `Cancel this reservation?\n\n` +
                `Customer: ${customerName}\n` +
                `Hotel: ${hotelName}\n` +
                `Room: ${roomName}\n` +
                `From: ${fromDate}\n` +
                `To: ${toDate}\n\n` +
                `This action cannot be undone.`;

            if (confirm(confirmMessage)) {
                var originalText = $btn.html();
                $btn.prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Cancelling...');

                $.ajax({
                    url: '@Url.Action("CancelReservation", "Reservations")',
                    type: 'POST',
                    data: {
                        reservationId: reservationId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#reservation-' + reservationId).fadeOut(800, function () {
                                $(this).remove();
                                location.reload();
                            });
                            toastr.success(response.message);
                        } else {
                            toastr.error(response.message);
                            $btn.prop('disabled', false).html(originalText);
                        }
                    },
                    error: function () {
                        toastr.error('Error while cancelling reservation');
                        $btn.prop('disabled', false).html(originalText);
                    }
                });
            }
        }
    </script>
}
